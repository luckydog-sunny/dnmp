version: "3.8"
services:
#  mine:
#    build:
#      context: ./services/mine
#      args:
#        MINE_VERSION : ${MINE_VERSION}
#    platform: linux/arm64/v8  # 适配mac-M1系统
#    ports:
#      - "${MINE_PORT_9000}:9000"
#      - "${MINE_PORT_9501}:9501"
#      - "${MINE_PORT_9502}:9502"
#    user: root
#    privileged: true
#    volumes:
#      - ${SOURCE_DIR}:/opt/www:rw
#    environment:
#      - APP_ENV=dev
#      - SCAN_CACHEABLE=false
#    cap_add:
#      - SYS_PTRACE
#    restart: always
#    tty: true
#    networks:
#      - default

  php74:
    build:
      context: ./services/php74
      args:
        PHP74_VERSION: ${PHP74_VERSION}
        PHP74_EXTENSIONS: ${PHP74_EXTENSIONS}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
    ports:
      - "${PHP74_PORT_9000}:9000"
      - "${PHP74_PORT_9501}:9501"
      - "${PHP74_PORT_9502}:9502"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP74_SSL_DIR}:/data/cert:ro
      - ${PHP74_INI_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP74_FPM_CONF_FILE}:/usr/local/etc/php-fpm.conf:ro
      - ${PHP74_LOG_DIR}:/var/log/php
      - ${PHP74_SSH_DIR}:/home/www/.ssh:ro
    restart: always
    command: php-fpm
    cap_add:
      - SYS_PTRACE
    networks:
      - default


#  php82:
#    build:
#      context: ./services/php82
#      args:
#        PHP82_VERSION: ${PHP82_VERSION}
#        PHP82_EXTENSIONS: ${PHP82_EXTENSIONS}
#        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
#    ports:
#      - "${PHP82_PORT_9000}:9000"
#      - "${PHP82_PORT_9501}:9501"
#      - "${PHP82_PORT_9502}:9502"
#    volumes:
#      - ${SOURCE_DIR}:/www/:rw
#      - ${PHP82_SSL_DIR}:/data/cert:ro
#      - ${PHP82_INI_FILE}:/usr/local/etc/php/php.ini:ro
#      - ${PHP82_FPM_CONF_FILE}:/usr/local/etc/php-fpm.conf:ro
#      - ${PHP82_LOG_DIR}:/var/log/php
#      - ${PHP82_SSH_DIR}:/home/www/.ssh:ro
#    restart: always
#    command: php-fpm
#    cap_add:
#      - SYS_PTRACE
#    networks:
#      - default

  php81:
    build:
      context: ./services/php81
      args:
        PHP81_VERSION: ${PHP81_VERSION}
        PHP81_EXTENSIONS: ${PHP81_EXTENSIONS}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
    ports:
      - "${PHP81_PORT_9000}:9000"
      - "${PHP81_PORT_9501}:9501"
      - "${PHP81_PORT_9502}:9502"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP81_SSL_DIR}:/data/cert:ro
      - ${PHP81_INI_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP81_FPM_CONF_FILE}:/usr/local/etc/php-fpm.conf:ro
      - ${PHP81_LOG_DIR}:/var/log/php
      - ${PHP81_SSH_DIR}:/home/www/.ssh:ro
    restart: always
    command: php-fpm
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  nginx:
     build:
       context: ./services/nginx
       args:
         NGINX_VERSION: ${NGINX_VERSION}
     volumes:
       - ${SOURCE_DIR}:/www/:rw
       - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl:rw
       - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
       - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
       - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
       - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params.conf:ro
       - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
     ports:
       - "${NGINX_HTTP_HOST_PORT}:80"
       - "${NGINX_HTTPS_HOST_PORT}:443"
     restart: always
     command: nginx -g 'daemon off;'
     networks:
       - default

  mysql8:
     build:
       context: ./services/mysql8
       args:
         MYSQL8_VERSION: ${MYSQL8_VERSION}
     ports:
       - "${MYSQL8_HOST_PORT}:3306"
     volumes:
       - ${MYSQL8_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
       - ${DATA_DIR}/mysql8:/var/lib/mysql/:rw
       - ${MYSQL8_LOG_DIR}:/var/log/mysql/:rw
     environment:
       MYSQL_ROOT_PASSWORD: "${MYSQL8_ROOT_PASSWORD}"
       MYSQL_ROOT_HOST: "${MYSQL8_ROOT_HOST}"
       TZ: "$TZ"
     restart: always
     command: "--character-set-server=utf8mb4"
     networks:
       - default

  redis-db:
     build:
       context: ./services/redis
       args:
         REDIS_VERSION: ${REDIS_VERSION}
     ports:
       - "${REDIS_HOST_PORT}:6379"
     restart: always
     networks:
       - default

  rabbitmq:
     build:
       context: ./services/rabbitmq
       args:
         RABBITMQ_VERSION: ${RABBITMQ_VERSION}
     ports:
       - "${RABBITMQ_PORT_WEB}:15672"
       - "${RABBITMQ_PORT_SERVICE}:5672"
     environment:
       - RABBITMQ_DEFAULT_USER="${RABBITMQ_DEFAULT_USER}"
       - RABBITMQ_DEFAULT_PASS="${RABBITMQ_DEFAULT_PASS}"
     restart: always
     networks:
       - default


# elasticsearch:
#   build:
#     context: ./services/elasticsearch
#     args:
#       ELASTICSEARCH_VERSION: ${ELASTICSEARCH_VERSION}
#       # ELASTICSEARCH_PLUGINS: ${ELASTICSEARCH_PLUGINS}
#   environment:
#     - TZ=$TZ
#     - discovery.type=single-node
#     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#   volumes:
#     - ${DATA_DIR}/esdata:/usr/share/elasticsearch/data
#     - ${ELASTICSEARCH_CONF_FILE}:/usr/share/elasticsearch/config/elasticsearch.yml
#   hostname: elasticsearch
#   restart: always
#   ports:
#     - "${ELASTICSEARCH_HOST_PORT_C}:9200"
#     - "${ELASTICSEARCH_HOST_PORT_S}:9300"

# logstash:
#   image: logstash:${LOGSTASH_VERSION}
#   container_name: logstash
#   hostname: logstash
#   restart: always
#   depends_on:
#     - elasticsearch
#   environment:
#     TZ: "$TZ"
#   ports:
#     - "${LOGSTASH_HOST_PORT_C}:9600"
#     - "${LOGSTASH_HOST_PORT_S}:5044"

# kibana:
#   image: kibana:${KIBANA_VERSION}
#   container_name: kibana
#   environment:
#     TZ: "$TZ"
#     elasticsearch.hosts: host.docker.internal:9200
#     I18N_LOCALE: "${KIBANA_I18N_LOCALE}"
#   hostname: kibana
#   depends_on:
#     - elasticsearch
#   restart: always
#   ports:
#     - "${KIBANA_HOST}:5601"

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      # 解除下面的注释可以设置网段，用于nginx等容器固定容器IP
      #config:
      #  - subnet: 10.0.0.0/24